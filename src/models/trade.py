from datetime import datetime
from typing import Optional
import uuid
from pydantic import BaseModel, field_validator, Field

from src.models.trade_side import TradeSide


class Trade(BaseModel):
    """
    Trade class to represent trade data
    """

    trade_id: Optional[uuid.UUID] = Field(title="Autogenerated Trade ID",
                                          default_factory=uuid.uuid4)
    timestamp: datetime = Field(description="Time of trade")
    quantity: int = Field(description="Quantity of trade")
    side: TradeSide = Field(description="Side of trade. Should be 'buy' or 'sell'")
    trade_price: float = Field(description="Price of trade")

    @field_validator('side', mode='before')
    def validate_side(cls, v):
        print(v)
        if v not in ['BUY', 'SELL']:
            raise ValueError("Side must be 'BUY' or 'SELL'")
        return v


